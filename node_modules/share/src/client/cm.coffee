applyToShareJS = (editorDoc, delta, doc) ->
  pos = undefined
  text = undefined
  change = delta
  loop
    pos = myIndexFromPos(change.from.line, change.from.ch, preActionCodemirrorContent)
    end_pos = myIndexFromPos(change.to.line, change.to.ch, preActionCodemirrorContent)
    action = ""
    if change.text[0] is "" and change.text.length is 1
      unless change.from.line is change.to.line
        action = "removeLines"
      else
        action = "removeText"
    else
      if change.text.length > 1
        action = "insertLines"
      else
        action = "insertText"
    switch action
      when "insertText"
        doc.del pos, end_pos - pos  unless pos is end_pos
        doc.insert pos, change.text[0]
      when "removeText"
        doc.del pos, end_pos - pos
      when "insertLines"
        doc.del pos, end_pos - pos  unless pos is end_pos
        text = change.text.join("\n")
        doc.insert pos, text
      when "removeLines"
        doc.del pos, end_pos - pos
      else
        throw new Error("unknown action: " + delta.action)
    preActionCodemirrorContent = doc.getText()
    break  unless change.next
    change = change.next

window.sharejs.Doc::attach_codemirror = (editor, keepEditorContents) ->
  check = undefined
  doc = undefined
  editorDoc = undefined
  editorListener = undefined
  suppress = undefined
  throw new Error("Only text documents can be attached to CodeMirror")  unless @provides["text"]
  doc = this
  editorDoc = editor
  check = ->
    window.setTimeout (->
      editorText = undefined
      otText = undefined
      editorText = editorDoc.getValue()
      otText = doc.getText()
      console.error "Texts are out of sync. Most likely this is caused by a bug in this code."  if editorText isnt otText
    ), 0

  if keepEditorContents
    doc.del 0, doc.getText().length
    doc.insert 0, editorDoc.getValue()
  else
    editorDoc.setValue doc.getText()
  preActionCodemirrorContent = editorDoc.getValue()
  check()
  suppress = false
  editorListener = (change, tc) ->
    return  if suppress
    applyToShareJS editorDoc, tc, doc
    check()

  editorDoc.setOption "onChange", editorListener
  myIndexFromPos = (line, ch, value) ->
    myIndex = 0
    count = 0
    lines = value.split("\n")
    i = 0
    while i < lines.length
      unless count < line
        myIndex += ch
        break
      count++
      i++
    myIndex

  doc.on "insert", (pos, text) ->
    suppress = true
    start = editorDoc.posFromIndex(pos)
    editorDoc.replaceRange text, start
    suppress = false
    preActionCodemirrorContent = editorDoc.getValue()
    check()

  doc.on "delete", (pos, text) ->
    range = undefined
    suppress = true
    start = editorDoc.posFromIndex(pos)
    end = editorDoc.posFromIndex(pos + text.length)
    editorDoc.replaceRange "", start, end
    suppress = false
    preActionCodemirrorContent = editorDoc.getValue()
    check()

  doc.detach_codemirror = ->
    editorDoc.removeListener "change", editorListener
    delete doc.detach_codemirror
 
  return